import React, { useState, useEffect } from 'react';
import Papa from 'papaparse';

const USAMap = () => {
  const [statesData, setStatesData] = useState({});
  const [hoveredState, setHoveredState] = useState(null);
  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });
  const [dataLoaded, setDataLoaded] = useState(false);

  // Load and parse the CSV data
  useEffect(() => {
    const loadData = async () => {
      try {
        const response = await fetch('/cs3043-project/map/data-gitbk.csv');
        const csvData = await response.text();
        
        Papa.parse(csvData, {
          header: true,
          dynamicTyping: true,
          skipEmptyLines: true,
          complete: (results) => {
            const data = {};
            results.data.forEach(row => {
              if (row.Abbreviation) {
                data[row.Abbreviation] = row;
              }
            });
            setStatesData(data);
            setDataLoaded(true);
          },
          error: (error) => {
            console.error('Error parsing CSV:', error);
          }
        });
      } catch (error) {
        console.error('Error loading CSV file:', error);
      }
    };

    loadData();
  }, []);

  // Handle mouse movement for tooltip positioning
  const handleMouseMove = (e) => {
    setTooltipPosition({ 
      x: e.clientX + 10, 
      y: e.clientY + 10 
    });
  };

  // Get fill color based on state status
  const getStateColor = (stateAbbr) => {
    if (!statesData[stateAbbr]) return "#f0f0f0"; // Default color if no data

    const state = statesData[stateAbbr];
    
    if (state.Passed === 1 && state.Current === 1) {
      return "#660000"; // Dark red for "Law Passed & Currently Active"
    } else if (state.Passed === 1) {
      return "#222222"; // Black for "Law Passed"
    } else if (state.Current === 1) {
      return "#cc0000"; // Red for "Active in 2025"
    } else {
      return "#ffcccc"; // Light pink for "Active Before 2025"
    }
  };

  // Determine if a state should have diagonal stripes (Law Passed & Currently Active)
  const hasStripes = (stateAbbr) => {
    if (!statesData[stateAbbr]) return false;
    return statesData[stateAbbr].Passed === 1 && statesData[stateAbbr].Current === 1;
  };

  return (
    <div className="relative w-full max-w-5xl mx-auto">
      <h2 className="text-3xl font-bold text-center mb-6">Right to Repair Legislation Map</h2>
      
      <div className="mb-4 flex flex-wrap justify-center gap-4">
        <div className="flex items-center">
          <div className="w-4 h-4 bg-red-700 mr-2"></div>
          <span>Active in 2025</span>
        </div>
        <div className="flex items-center">
          <div className="w-4 h-4 bg-black relative overflow-hidden mr-2">
            <div className="absolute inset-0 w-4 h-4 bg-pattern-diagonal"></div>
          </div>
          <span>Law Passed & Currently Active</span>
        </div>
        <div className="flex items-center">
          <div className="w-4 h-4 bg-black mr-2"></div>
          <span>Law Passed</span>
        </div>
        <div className="flex items-center">
          <div className="w-4 h-4 bg-red-100 mr-2"></div>
          <span>Active Before 2025</span>
        </div>
      </div>

      <div 
        className="relative w-full" 
        onMouseMove={handleMouseMove}
      >
        <svg 
          viewBox="0 0 959 593" 
          className="w-full h-auto"
        >
          <defs>
            <pattern id="diagonalHatch" patternUnits="userSpaceOnUse" width="4" height="4">
              <path d="M-1,1 l2,-2 M0,4 l4,-4 M3,5 l2,-2" stroke="black" strokeWidth="1" />
            </pattern>
          </defs>

          {/* State path*/}
          <path id="AK" d="M161.1,453.7 l-0.3,85.4 1.6,1 3.1,0.2 1.5,-1.1 h2.6 l0.2,2.9 7,6.8 0.5,2.6 3.4,-1.9 0.6,-0.2 0.3,-3.2 1.5,-1.6 1.1,-0.2 1.9,-1.5 3.1,2.1 0.6,2.9 1.9,1.1 1.1,2.4 3.9,1.8 3.4,6 2.7,3.9 2.3,2.7 1.5,3.7 5,1.8 5.2,2.1 1,4.4 0.5,3.2 -1,3.4 -1.8,2.3 -1.6,-0.8 -1.5,-3.1 -2.7,-1.5 -1.8,-1.1 -0.8,0.8 1.5,2.7 0.2,3.7 -1.1,0.5 -1.9,-1.9 -2.1,-1.3 0.5,1.6 1.3,1.8 -0.8,0.8 c0,0 -0.8,-0.3 -1.3,-1 -0.5,-0.6 -2.1,-3.4 -2.1,-3.4 l-1,-2.3 c0,0 -0.3,1.3 -1,1 -0.6,-0.3 -1.3,-1.5 -1.3,-1.5 l1.8,-1.9 -1.5,-1.5 v-5 h-0.8 l-0.8,3.4 -1.1,0.5 -1,-3.7 -0.6,-3.7 -0.8,-0.5 0.3,5.7 v1.1 l-1.5,-1.3 -3.6,-6 -2.1,-0.5 -0.6,-3.7 -1.6,-2.9 -1.6,-1.1 v-2.3 l2.1,-1.3 -0.5,-0.3 -2.6,0.6 -3.4,-2.4 -2.6,-2.9 -4.8,-2.6 -4,-2.6 1.3,-3.2 v-1.6 l-1.8,1.6 -2.9,1.1 -3.7,-1.1 -5.7,-2.4 h-5.5 l-0.6,0.5 -6.5,-3.9 -2.1,-0.3 -2.7,-5.8 -3.6,0.3 -3.6,1.5 0.5,4.5 1.1,-2.9 1,0.3 -1.5,4.4 3.2,-2.7 0.6,1.6 -3.9,4.4 -1.3,-0.3 -0.5,-1.9 -1.3,-0.8 -1.3,1.1 -2.7,-1.8 -3.1,2.1 -1.8,2.1 -3.4,2.1 -4.7,-0.2 -0.5,-2.1 3.7,-0.6 v-1.3 l-2.3,-0.6 1,-2.4 2.3,-3.9 v-1.8 l0.2,-0.8 4.4,-2.3 1,1.3 h2.7 l-1.3,-2.6 -3.7,-0.3 -5.2,2.6 -2.1,3.4 -0.5,1.1 -1.3,-1.8 -0.3,-2.4 -2.8,-2.4 -1.5,-2.6 -2.6,-0.5 -3.9,-3.7 -3.7,3.3 -6.8,5.5 -4,0 -2.8,-1.9 -2.1,-1.5 -2.4,0.5 -4,1.8 -3.6,0.5 -4.7,0.3 -4,0.3 -3.5,3.2 -0.3,2.4 -1.5,1.5 -0.5,1.1 0.6,1.6 1.5,0.3 1,3.1 4,1.3 4.2,1.3 0.8,0.8 1.3,0.3 0.8,2.3 2.9,0.8 0.8,1 -0.8,1.9 0.3,1.1 -0.8,0.6 -1.8,0 -1.5,-1.3 -1,-0.3 -3.9,2.3 v0.8 l1.3,1.5 2.3,2.3 0.8,4.8 0.3,3.9 1.3,0.5 1.3,1 0.3,1.6 -1.1,1.3 -0.3,3.3 -1,1 h-5.2 l-3.3,-2.4 -1,-3.1 -0.5,-0.3 -0.5,2.6 -1.3,-2.3 -1.5,-0.3 -0.5,-3.1 -4.5,-3.1 -2.4,-3.2 -2.9,-0.8 -1,-1.1 -8.7,-0.3 -5.2,0.2 -1.5,2.4 -0.3,1.5 -2.8,1.9 -5.2,1.1 -5.8,2.1 -1.8,1.5 -1.5,3.1 -0.3,0.5 -0.2,0.6 v2.1 l-1.9,1.2 -3,0.6 -0.6,2.3 -5.4,2.4 -6.6,3.7 -1.3,0.5 -2.6,-0.8 -3.5,-1.8 -3.9,-0.3 -1.2,-0.6 -2.5,2.7 -1.6,1.9 -2.9,1.1 -5.1,1.3 -3.1,-0.8 -2.6,1.3 -2.3,0.8 -4,0.3 -2.4,0.5 -3.1,-1.3 -2.3,0.6 -1.5,0.2 -2.6,-1.1 -2.9,-1.9 -2.9,-2.9 -7.5,1.5 -3.5,0.3 -0.8,1.3 -4.2,1.3 -4.9,0.9 -1.5,-0.9 -4.2,-0.9 -0.8,-2.6 v-1 l1.2,-1.6 0.2,-3.9 -1.1,-3.5 -3.1,-4.9 -0.8,-2.3 -0.8,-3.1 -2.3,-4.4 -1,-1 -3.1,-0.2 -1.3,-1.1 -0.5,-1.8 -2.6,-1.5 -1.3,-1.1 -2.6,0.5 -1,-1.1 -1.5,-0.5 -4.5,0.3 -2.4,0.7 -0.3,0.5 -0.5,-0.2 -1.3,-1.3 -0.5,-1.5 -3.9,-2.3 -0.8,-0.8 -0.3,-3.9 -2.9,-2.3 -0.8,-1.6 0.3,-2.1 0.8,-0.8 0.8,-1.8 -0.3,-1.8 0.8,-1.9 1.1,-1.1 0.3,-1 -2.9,-1.3 -1.1,-1.1 v-2.3 l-1.3,-1.3 -3.6,0.3 -3.4,1.3 0.3,1.1 1,0.5 -0.8,1.1 -2.9,1 -0.3,0.6 h-4.7 l-3.9,0.9 -2.9,1.9 -2.1,0.8 -0.5,0.2 -2.9,0 -0.5,-0.5 -0.8,0.2 -2.1,1.5 -0.5,0.5 -2.7,0.3 -0.8,1 -0.8,-0.2 0.5,-1.1 -0.3,-0.8 -1.3,-0.3 -1,0.6 -1.3,0.2 -0.3,-0.2 0.6,-0.6 0.5,-0.9 0,-0.5 -1.6,-1.6 -0.3,-1.3 0.8,-0.6 h1.3 l-0.5,-0.6 -0.3,-1.3 -1.3,-0.6 -0.3,-0.6 0.8,-1 -0.6,-0.3 -0.8,0.6 -1.6,0.2 c0,0 -0.3,-0.2 -0.2,-0.6 0,-0.4 0.2,-1.1 0.2,-1.1 l-0.8,-0.2 c0,0 -0.5,1.1 -0.8,1.1 -0.3,0 -1,-0.2 -1,-0.2 l-3.1,-0.2 -2.4,-2.3 -1.6,-0.6 -1.3,-0.2 -1.5,0.8 0,0.6 1.5,1.5 0.3,1.1 -1.5,0.8 -1.3,0.2 -0.6,1.1 0.2,1.6 -1.5,2.3 -0.3,1.3 2.3,0.2 0.5,0.6 -0.6,0.8 -1.6,0.2 -1,1.1 -0.2,2.1 -2.6,2.4 -0.6,1.6 -2.3,0.8 -0.5,1.5 -0.5,0.8 -0.8,3.1 -2.9,1.9 0.3,3.7 3.5,3.7 0.6,3.4 3.2,4.4 1.5,0.5 2.3,0 1,1.9 -0.8,1.6 0.6,0.6 -0.8,2.4 -1,3.1 v0.8 l-1.8,3.2 -2.1,2.6 -0.3,0.5 0.3,0.6 -0.3,1.3 2.1,0.6 1.1,0.6 1.8,-0.6 1.1,1.1 -0.8,0.8 -2.1,0.6 -0.6,0.6 1.6,1.6 1.5,0.6 h0.8 l3.1,-2.6 1.1,1 0.8,-0.2 1.5,-0.8 0.3,0.2 0.5,1.6 1,0.6 1,-1.1 1.6,0.2 0.5,-0.3 v-0.8 l-0.8,-0.6 0.3,-0.2 1.9,0.2 1.5,0.5 1.3,1.8 1,2.1 3.1,2.6 1.5,2.3 0.2,0.3 v1.1 l0.5,0.6 1.5,0.2 0.5,0 0.5,-1.6 1.8,-1.1 0.5,0.2 -0.8,1.6 0.6,1 1.6,1.6 0.6,1.9 0.8,0.6 h1.3 l1.1,-0.3 2.1,0.3 2.3,-2.9 1.1,-0.3 1.9,1.5 1.9,0.6 1.1,1.3 0.8,0.2 1.3,-0.8 0.3,0.6 h1.9 l2.3,-1.3 1.1,0.6 1.3,1.3 0.3,1.6 1.8,1.6 0.3,0.3 -0.3,1.6 -1.9,0.6 -0.3,0.6 -0.3,3.7 0.3,0.8 2.1,-0.3 2.6,-1.1 0.8,-1.3 0.3,-3.4 2.1,-2.6 1.1,-0.2 0.6,1.6 1.5,-0.2 0.5,-0.8 1.9,0.6 2.3,-0.9 1.1,-1.1 0.6,0.2 c0,0 -0.2,1 0,1.3 0.2,0.3 0.5,1.6 0.5,1.6 l1.1,0.2 0.5,-1.5 0.6,-0.2 0.3,0.8 1.1,0.6 1.5,-0.5 0.8,-1.6 1.5,0.2 1.5,1.1 -1,1.1 -0.8,0.2 -0.3,2.1 1.1,0.2 1.1,-1.3 1.3,-0.2 1.3,-1.3 0.6,-2.9 1,-0.3 c0,0 0.3,1 0.6,1 0.3,0 2.3,-0.3 2.3,-0.3 l0.8,-1.9 0.3,-1.1 -1.1,-1.9 1,-0.5 2.3,0.2 0.2,0.5 0.3,1.8 0.8,-0.2 0.6,-2.1 -0.8,-0.5 v-0.3 l3.2,-2.3 1.3,0.8 -1.3,2.3 0.6,1.8 1.3,0.3 0.6,-0.5 1.3,0.3 1.6,0.6 1.6,-0.6 0.2,-1 2.1,-0.3 1.6,-1.6 0.2,-3.1 1.5,-0.3 0.2,1.3 1.1,0.3 0.8,-0.6 2.9,-2.7 1.3,-0.6 1.5,0.2 1.3,-0.6 -0.2,-1 -0.8,-0.5 -3.9,-1.9 -2.3,-1.5 0,-1.5 -1.8,-1.9 -2.6,-1.9 0.2,-2.7 7.5,1.1 0.6,0.5 3.4,5.5 0.6,2.6 -0.8,0.5 -0.3,1.9 -5.2,3.1 -1.8,0.5 -0.6,2.9 -1.5,1.3 -0.6,2.3 0.6,1.9 -2.9,2.7 -5,1.1 -0.2,1.3 2.6,2.3 0.8,1.3 -0.3,1 -3.1,1.3 -1.5,1.5 -0.5,1.1 -2.7,-0.5 -0.3,0.5 0,1.3 -1.5,0.8 -1.1,-0.5 -0.6,-2.9 -1.9,-1.5 -0.6,0.5 -0.3,3.7 -1.9,1.5 h-1.6 l-0.3,-1.9 4.4,-5.8 4.7,-1.5 0.5,-3.9 2.7,-5.5 1.8,-1.1 -0.2,-5.8 1.3,-3.1 v-2.3 l0.6,-1.1 3.4,-5.7 7.8,-5.2 0.6,-2.1 4.9,-4.2 0.3,-3.2 3.5,-2.6 1,-1.8 v-4.4 l1.1,-2.7 2.3,-0.6 2.6,-1.3 3.2,-3.4 3,-1.8 0.5,-1.9 3.4,-5.3 1.1,-5.4 1.3,-1.4 4.8,-9.8 0.8,-4.8 1.4,-1.5 0.3,-2.3 2.4,-5 3,-3.5 0.6,-5.7 1.5,-2.7 0.5,-2.4 -1.3,-2.9 -4.8,-1.8 -1.3,-5.3 -2.9,-1.5 -0.8,-1.8 -0.8,-4.5 -1.8,-1.9 -0.6,-2.4 -2.9,-0.6 -2,-5.1 0.2,-1.5 2.6,-0.6 1.1,-1 5.2,-13.1 0.6,-4.8 -0.3,-3.9 -1.5,-3.5 -1,-3.9 -4.2,-7.4 -0.3,-3.1 0.8,-4.3 -0.3,-1.1 -1.5,-0.8 -0.8,-2.4 -2.3,-2.3 -3.7,-1.3 -1,-4.4 -2.3,-2.8 h-2.9 l-1.1,-1.9 -0.2,-3.6 -1.3,-0.8 -0.3,-2.7 -4.8,-0.9 -0.6,-0.8 0.9,-1.8 0,-4.2 -0.6,-0.6 -0.6,-3.5 -2.7,-3.7 -6.6,-16.3 -0.3,-3.5 1.1,-0.6 1,-5.3 3,-7.6 -0.5,-2.9 0.5,-2.9 -1.1,-8.5 -2.9,-8.9 -0.5,-5.5 1.6,-6 -1.3,-4.1 -0.3,-5.5 -1.8,-0.8 -1.5,-6.3 -0.5,-5.3 -2.6,-5.1 -1.9,-2.1 -3.1,-2.5 -4.5,-1.3 -2.9,-1.1 -3.4,-4.7 0.2,-3.2 -2.6,-1.1 -2.2,-1.3 -1.5,-2.1 -2.8,-2 -3,-1.5 0,-1.6 1.8,-1.5 -1.5,-1.5 0.5,-0.6 -2.8,-1.5 1.1,-2.1 -1,-2.9 -2.1,-0.8 -0.2,-1.3 1.1,-1.1 -2.8,-3.9 -1.8,-1.6 0.7,-1.6 -2.8,-1 1.5,-0.8 -0.3,-0.3 -1.5,0.2 -0.5,0.5 -3.4,-2.1 0.2,-1 -4.2,-0.6 -2.6,-1.8 -1.9,-1 -4,-0.2 -0.8,-1.3 0.2,-1.3 -1.8,0.2 -2.7,-1.8 -3.4,-1.1 -2.9,-7.4 -9,-0.1 -2.2,-1.5 -4.2,-0.8 -4.4,0.5 -1.9,-1 -0.4,-0.9 z" fill={getStateColor("AK")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("AK")} onMouseEnter={() => setHoveredState("AK")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("AK") && <rect x="161.1" y="453.7" width="217" height="100" fill="url(#diagonalHatch)" />}
          </path>
          <path id="AL" d="M628.5,466.4 l0.5,57.5 -0.7,31 2.3,0.2 1.5,-0.9 0.8,-8.5 2.1,-6.1 2.2,-0.1 1.8,-2 -0.4,-5.3 -2.2,-3.3 0.5,-2.7 0.4,-3.8 0.6,-2.7 3.3,-1.6 1.4,-0.9 -0.3,-3.5 -3.5,-1 -1,-2.9 -1.2,-6.1 -1.5,-1.4 -0.4,-5.4 -1,-3.5 -1.7,-1.4 -2.5,-3 -2.5,-5.6 -2,-0.2 -1.7,-1.6 0.3,-2.5 -2.1,-1.8 -2.8,-3.7 -0.1,-1.9 -0.6,-1.7 -1.5,-1.6 -1.3,-0.5 -0.2,-3.1 -1.5,-2.5 -1.6,0.5 -0.8,1.5 -0.8,-1.7 -1.6,-0.5 -0.6,-2 0.6,-3 2.1,-3.5 2.3,-0.5 3,3 0.2,3.5 0.8,1.7 4.4,0.6 2.5,4.6 0.8,0.5 0.3,-0.2 1.1,-0.5 0.5,0.2 0.3,3.2 2.8,1.5 0.6,4.8 1.8,2 0,1 0.3,0.6 1.5,-2.6 1.4,-3.9 z" fill={getStateColor("AL")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("AL")} onMouseEnter={() => setHoveredState("AL")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("AL") && <rect x="628.5" y="466.4" width="50" height="100" fill="url(#diagonalHatch)" />}
          </path>
          <path id="AR" d="M587.3,346.1 l-6.4,-0.5 0.9,-3.1 3.1,-2.6 0.6,-2.3 -1.8,-2.9 -31.9,1.2 -23.3,0.7 -23.6,0.3 1.5,6.9 0.1,8.5 1.4,10.9 0.3,38.2 2.1,1.6 3,-1.2 2.9,1.2 0.4,10.1 25.2,-0.2 26.8,-0.7 1.3,-1.5 1.5,1.8 0.5,3.2 4.7,0.5 0.9,1.9 -0.3,1.8 2.8,1.1 1.7,-0.5 3.4,5.6 3.2,-1.3 2.8,0.1 -0.1,-1.5 2.3,-1.4 -0.3,-2.5 -2.4,-2.8 -3.5,-1.4 -0.2,-2.2 -1.7,-2.9 1.7,-1.5 -0.5,-3.4 1.6,-1.5 -1.4,-2.3 4.5,-1.7 0.5,-2 1.3,-3.6 0.1,-3.5 -0.9,-1.1 1.1,-1.4 0.6,-1 -1.2,-1 0.5,-3.7 1.9,-1.6 1.7,0.5 0.9,-3.5 -1,-2 2.2,-3.1 -0.2,-3.2 1.4,-4.4 -0.2,-3.2 3.5,-5.4 1.2,-5.1 z" fill={getStateColor("AR")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("AR")} onMouseEnter={() => setHoveredState("AR")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("AR") && <rect x="539" y="346" width="50" height="100" fill="url(#diagonalHatch)" />}
          </path>
          <path id="AZ" d="M135.1,389.7 l-0.3,1.5 0.5,1 18.9,10.7 12.1,7.6 14.7,8.6 16.8,10 12.3,2.4 25.4,2.7 6,-39.6 7,-42.5 4.4,-31 -24.6,-3.6 -60.7,-11 -0.2,1.1 -2.6,16.5 -2.1,3.8 -2.8,-0.2 -1.2,-2.6 -2.6,-0.4 -1.2,-1.1 -1.1,0.1 -2.1,1.7 -0.3,6.8 -0.3,1.5 -0.5,12.5 -1.5,2.4 -0.4,3.3 2.8,5 1.1,5.5 0.7,1.1 1.1,0.9 -0.4,2.4 -1.7,1.2 -3.4,1.6 -1.6,1.8 -1.6,3.6 -0.5,4.8 -3,2.9 -1.9,0.9 -0.3,5.8 1.9,1 1,2 2.3,-0.2 3,2.1 z" fill={getStateColor("AZ")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("AZ")} onMouseEnter={() => setHoveredState("AZ")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("AZ") && <rect x="135" y="320" width="100" height="100" fill="url(#diagonalHatch)" />}
          </path>
          <path id="CA" d="M122,385.9 l-19.7,-2.7 -10,-1.5 -0.5,-1.8 v-9.4 l-0.8,-1.8 -1.1,-2.3 -8.5,-0.5 -1.8,-2.9 -1.5,0.5 -0.5,-2.9 -0.3,-0.8 -0.3,-2.9 -2.6,-4.8 -0.3,-3.6 1.5,-0.5 6.9,-0.8 2.3,-1.6 3.6,-0.3 4.1,-1.9 2.1,-2.1 0.5,-6.1 -1.5,-1.8 -4,-0.8 -3.6,-1.9 -2.1,-3.9 -9.5,-3.2 -7.5,-2.5 -2.6,-4.5 0.5,-3.2 -2.1,-1 h-3.1 l-0.5,-2.6 0.5,-4.7 1.8,-4.8 2.9,-5.2 -0.3,-3.2 -1.5,-4.4 -2.9,-4.4 -1.3,-3.5 0.6,-3.9 -0.3,-3.6 -1.9,-2.7 -2.1,-5.7 0.1,-7.6 1.8,-3.6 0.5,-2.3 2.9,-2.9 1.3,-7.3 1.5,-4.7 0.5,-3.1 -0.8,-3.3 -1.8,-7.2 -6.6,-17.4 -3.9,-4.8 -2.1,-3.9 -4.5,-10.3 -1.3,-3.6 -4.5,-9.9 -3.4,-6.4 1.6,-0.8 4.2,-0.3 4.8,-2.1 1.4,-1.9 6.5,-2.9 8.2,-2.4 3.9,-0.6 2.3,-4.1 1.8,-0.6 3.2,0.6 1.9,-2.4 -0.6,-2.7 -1.9,-0.6 -1,-1.1 0.3,-1.6 -1.8,-1 -2.1,-3.6 -2.6,-4.9 -2.4,-2.5 -2.3,-5.7 -3.2,-5.2 -0.3,-2.7 1.5,-1 1,-1.8 0.7,-3.6 0.8,-4.8 -0.4,-3 -1.3,-1.9 -0.7,-1.1 0.6,-3.4 -0.7,-1.8 0.4,-5 1.2,-2.7 0.5,-2.6 -0.9,-3.5 -2.9,-5.5 -1.1,-3.9 -0.4,-3 1.2,-4 0.7,-2.4 0.1,-1.8 2.6,-0.6 1,-2.1 1,-1.3 -0.4,-1 0.6,-1.8 -0.2,-5.4 -0.8,-2.2 -0.6,-9.5 1.4,-3.2 0.4,-3.5 -1,-3.7 0.5,-9.3 0.7,-2.3 2.6,-4.1 0.6,-1.9 1.2,-1.4 17.4,6.5 9.9,4 24.6,9.6 18.9,7.3 -0.5,1.8 0.2,3.1 2.1,1.8 1.9,2.6 2.1,0.8 1.1,0.3 0.6,3.1 -1.8,2.9 -0.3,2.2 -1.6,1 -0.5,2.7 -0.8,2.3 0.6,1.8 1.9,3.5 0.5,5.3 -0.8,3.2 -1.8,2.4 -0.5,1.5 0.6,4.9 1.1,1.5 1.1,1 0.3,1 -0.3,2.7 0.8,2.4 2.7,2.1 0.8,1.8 0.8,0.5 1.8,2.7 4.2,0.2 1.6,0.5 1.1,1.5 0.6,3.7 0.3,0.8 1.3,1 0.3,0.5 -0.3,1.3 0.6,1.5 3.1,4.8 0.3,2.9 1.1,3.2 3.4,5.9 1.5,2.1 2.3,2.5 2.7,2.1 1.7,2.2 1,0 0.8,-0.6 1.2,-3.3 1,-0.7 0.2,0.9 -1.1,3.8 -1,3.3 -0.8,4.3 0.6,1.9 2.1,2.7 0.1,1.3 1.9,3.1 5.5,11.2 0.3,2.2 0,8.2 0.5,2 1,1.1 1.5,0.3 0.8,0.8 1.4,3.8 1.8,2.6 3,3.3 0.8,1.5 -0.3,0.9 -1.5,-0.4 0,1.8 -0.8,1.4 -0.3,1.9 0.5,1.5 0.8,0.5 1,1.1 -0.5,1.1 2.1,1.8 1.8,1.1 1.3,-0.5 1.6,1.4 3.4,6.3 0.3,3.1 -0.8,3.1 -1.5,2.9 -1.6,0.5 -1.5,2.4 -3.8,6.4 -1,3.1 0.3,1.9 1.6,0.6 0.3,0.6 -1.1,1.8 -0.6,3.3 -0.3,3.5 0.8,2.4 2.3,4.9 1.3,2.2 3.7,3.9 2.3,4.9 1.5,0.8 2.9,0.8 1.3,1.3 2.1,1.5 4.4,0.5 1.9,2.6 1.1,2.3 0.3,2.7 1.6,4.4 0.6,0.6 0.1,7.6 -1,3.6 -0.6,5.5 -2.9,5.9 0,8.5 0.2,9.4 0.8,1.8 0.2,1.3 2.3,2.5 0.3,1.7 -2,3.2 1.5,4.4 -0.1,4.5 -3.5,4.2 -0.6,2.4 -0.5,0.8 -0.3,2.7 -9.9,2.9 -9.1,3.3 z" fill={getStateColor("CA")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("CA")} onMouseEnter={() => setHoveredState("CA")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("CA") && <rect x="65" y="200" width="100" height="200" fill="url(#diagonalHatch)" />}
          </path>
          <path id="CO" d="M380.2,235.5 l-36,-3.5 -79.1,-8.6 -2.1,22.1 -7,50.4 -4.3,31 33.1,3.8 37.5,4.4 34.5,3 14.1,0.6 v-2.5 l4.2,-21.4 5.7,-28.6 1.6,-38.3 z" fill={getStateColor("CO")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("CO")} onMouseEnter={() => setHoveredState("CO")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("CO") && <rect x="260" y="220" width="140" height="100" fill="url(#diagonalHatch)" />}
          </path>
          <path id="CT" d="M852,190.9 l3.6,-3.2 1.9,-2.1 0.8,0.6 2.7,-1.5 5.2,-1.1 7,-3.5 -0.6,-4.2 -0.8,-4.4 -1.6,-6 -4.3,1.1 -21.8,4.7 0.6,3.1 1.5,7.3 v8.3 l-0.9,2.1 1.7,2.2 z" fill={getStateColor("CT")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("CT")} onMouseEnter={() => setHoveredState("CT")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("CT") && <rect x="840" y="170" width="40" height="30" fill="url(#diagonalHatch)" />}
          </path>
          <path id="DE" d="M825.6,228.3 l-1.5,-4.8 -1.9,-3.6 -2.3,-1 -2.4,-5.7 0.5,-2 0.5,-2.3 0.1,-1.1 -0.6,-1.8 -1.5,-1.1 -3,-7.4 -7.1,1.2 -2.2,0.5 2.1,5.9 2.2,9.8 3.8,16.4 1.8,3.5 1.1,5.9 5,-0.2 6.1,-1.2 z" fill={getStateColor("DE")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("DE")} onMouseEnter={() => setHoveredState("DE")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("DE") && <rect x="805" y="210" width="25" height="40" fill="url(#diagonalHatch)" />}
          </path>
          <path id="FL" d="M750.2,445.2 l-5.2,-0.7 -5.2,-0.2 -3.4,-1.7 -0.6,-7.1 -2.6,-1 -0.2,-2.7 h-4.4 l-5.3,0.7 -32.4,1.9 -8.2,-0.3 -1.7,-1.7 -2.5,-1 -1.4,0.7 -1.8,-0.5 -8.1,1 -19,-0.5 -15.3,0.9 -9.2,0.5 -4.4,0.5 -5.9,0.9 0.1,2.7 0.1,1 -0.7,1.1 -4.5,6 -2.8,1.9 -3.3,-0.2 -4.5,-1 -3,0.2 -0.3,1.3 -4.7,0.9 -2.8,0.9 -2.8,2.2 -0.5,1.4 h0.2 l0.2,1.2 0.1,2 2.1,2.1 3.3,1.5 1.2,3.4 3.8,3.8 0,0.4 2.2,1 0.1,0.4 -3.1,5.5 -0.4,1.1 -0.6,5.8 1,3.9 1.8,1.8 0.5,1.7 3.1,3.9 1.6,1.4 1.7,3.2 1.1,3.7 3.1,4.9 0.8,2.3 0.8,4.3 -0.8,4.2 0.5,1.2 0.4,2.4 1.1,1 1.1,0.5 2.5,3.6 v0.5 l2.2,3.8 2.7,3.4 0.4,0.8 0.2,2.9 -1.5,4.9 -0.4,0.3 -0.1,0.3 h0.7 l10.2,-3 10.3,-2.3 8.2,-3.4 5.2,-2.4 4.5,-2.8 5.9,-2.8 5.9,-3.5 6,-2.9 13.5,-7.9 12.8,-8.1 10.8,-7.9 4.2,-0.2 9,-0.7 7,-1.7 4.3,1 -1.9,-2.5 -1.8,-1.5 -0.5,0.1 -0.8,1.3 -1.9,-0.8 -0.5,-1.3 0.2,-3.3 -0.7,-1.7 0.6,-1.7 -1.3,-1.3 -1.3,-0.7 -1.3,-0.2 -1,-0.2 0.3,-0.8 h1.8 l0.1,-2.3 h2.6 l-0.1,-1.2 -2.7,-1.5 -0.8,-0.3 -0.6,0.1 -0.8,0.6 -0.9,-0.3 0.2,-0.8 0.9,-0.5 0.6,-0.8 0.4,-1.3 -0.1,-0.3 v-0.3 l-0.8,-0.7 -2.9,-0.3 -0.5,-0.5 -0.3,-0.5 -0.6,0.3 -0.6,0.7 -0.8,0.2 -1.3,-0.8 -0.4,-0.5 -0.1,-0.3 0.1,-0.1 0.3,-0.1 0.5,-0.3 0.3,-0.3 0.1,-0.3 -0.3,-0.7 0.7,-0.3 v-0.2 l-0.3,-0.2 -0.3,-0.1 -0.4,0.1 -0.6,0.3 -0.3,-0.1 -0.4,-0.6 -0.3,-0.1 -0.3,0.1 -0.4,0.4 h-0.2 l-0.9,-0.8 -0.3,-0.1 -0.3,0.1 -0.8,0.7 -0.2,0.1 -0.5,-0.1 -0.5,-0.4 -0.1,-0.3 0.1,-0.3 0.5,-1.1 -0.1,-0.1 -0.3,0.1 -0.6,0.6 -0.1,0.2 v0.6 l0.1,0.5 -0.3,0.3 -0.7,0.2 -0.3,0.2 -0.6,0.8 -1,0.4 -0.2,0.2 -0.1,0.2 0,0.2 0.2,0.7 v0.9 l-1,1.9 -0.2,0.9 -2,0.5 -0.8,0.5 -0.3,0.6 -0.2,1.4 0.1,0.6 0.3,0.7 0.7,0.7 v0.3 l-0.9,0.7 -0.5,0.9 -0.1,1.4 0.1,0.7 0.8,1.1 1.3,1.1 0.2,0.3 -0.1,0.2 0,0.3 0.5,0.4 0.2,0.8 -0.1,0.3 -0.5,0.4 -0.9,0.5 0.1,0.1 v0.1 l-0.1,0.3 -0.1,0.1 -0.3,0.5 0.4,0.5 v0.4 l-0.1,0.5 -1,0.9 -0.2,0.3 -0.1,0.4 0.2,0.5 0.5,0.5 0.2,0.3 -0.1,0.9 0.2,0.4 0.6,0.6 0.5,0.3 0.5,0.2 0.4,-0.1 0.8,-0.4 0.8,-0.2 0.4,0.2 0.1,0.3 -0.2,0.7 -0.2,0.3 -1.8,0.4 -2.7,1.5 -1.4,1.1 -0.3,0.4 -0.2,0.4 -0.1,0.9 0.2,0.9 -0.3,0.6 -0.3,0.2 -0.5,0 -0.5,0.1 -0.6,0.5 -0.3,0.1 -0.7,-0.1 -0.3,0.1 -0.3,0.3 -0.3,0.7 -0.5,0.5 -0.7,0.2 -0.9,-0.1 -0.9,0.2 -0.9,0.5 v0.1 l0.3,1.1 0.9,1.5 1.2,1.1 0.6,1 -0.3,0.4 -1.3,0.3 -0.3,0.2 -0.3,0.5 0.1,0.6 0.3,0.6 0.9,0.9 0.3,0.5 0,0.5 -0.4,0.8 0.4,0.3 0.3,0.8 0.8,0.5 0.3,0.5 0.5,1.6 0.2,0.5 0.6,0.8 v0.3 l-0.4,0.5 -0.1,0.5 0.2,0.5 0.5,0.5 -0.1,0.6 -1.1,1.2 0.2,0.3 0.7,0.3 0.9,0.9 z" fill={getStateColor("FL")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("FL")} onMouseEnter={() => setHoveredState("FL")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("FL") && <rect x="620" y="440" width="140" height="110" fill="url(#diagonalHatch)" />}
          </path>
          <path id="GA" d="M750.2,444.2 l-5.6,-0.7 -5.3,-0.2 -0.7,-1.5 -2.6,-0.1 -0.5,-1.3 -0.7,-1.9 -1.9,-0.9 -0.4,-2.3 -2.5,-1.6 -0.6,-1.9 -1.7,-1.8 -3.9,-1.8 -3.1,-3 -4.6,-1.7 -2.3,-2 -2.1,-1.9 -0.8,-3.5 -2.7,-3.7 -0.5,-3.2 0.2,-2.5 -2.2,-3 -0.1,-2.2 -1.7,-3 -2.4,-2.2 -2.7,-1.1 -1.3,-2.3 -1.8,-1.9 -1.9,-0.8 -0.1,-0.4 -2.5,-4.2 -0.8,-2.3 0.8,-2.2 2.5,-1.3 0.5,-1.7 0,-0.8 -0.7,-0.7 0.1,-0.3 -0.1,-0.6 -0.6,-2.1 1.8,-0.5 2.5,-2.6 3.4,-2.4 0.6,-0.9 -0.3,-1.8 -1.1,-1.1 -0.1,-1.5 4.4,-2.5 0.9,1 1.1,-0.6 4.8,-1.9 0.4,-0.8 -0.4,-1 -0.1,-1.4 -0.6,-1.2 -1.5,-0.3 -0.8,-0.5 0.1,-0.4 2.3,-0.7 0.3,-0.9 -0.4,-0.3 8.7,-3.6 6,-0.5 0.9,-1.4 1,-0.2 0.5,0.7 h1 l0.8,-0.7 7.8,-0.2 4.9,0.7 4.7,-2.4 3.6,-0.3 3.4,-1.7 3.1,1.5 2.1,0.3 2.3,-1.3 2.1,-0.1 0.1,2.6 3.2,2.4 0.2,1.4 -0.8,1.9 0.8,0.9 2.1,0.3 1,1.9 2.6,0.7 3,1.6 2.7,0.5 1,2.7 1.3,0.7 1.5,-0.5 1.7,1.1 2.8,1.1 -1.2,3.1 -0.6,3.1 0.8,1.2 3.3,1.7 0.8,1.9 0.5,2.2 -4.6,0.5 -4.7,-0.8 -1,1.2 -6.5,1.1 -6,2.7 h-0.2 l-7.3,5.7 -9.8,6.2 -19.7,12.9 -10.2,3 z" fill={getStateColor("GA")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("GA")} onMouseEnter={() => setHoveredState("GA")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("GA") && <rect x="700" y="380" width="60" height="70" fill="url(#diagonalHatch)" />}
          </path>
          <path id="HI" d="M233.1,519.3 l1.9,-3.6 2.3,-0.3 0.3,0.8 -2.1,3.1 z m10.2,-3.7 6.1,2.6 2.1,-0.3 1.6,-3.9 -0.6,-3.4 -4.2,-0.5 -4,1.8 z m30.7,10 3.7,5.5 2.4,-0.3 1.1,-0.5 1.5,1.3 3.7,-0.2 1,-1.5 -2.9,-1.8 -1.9,-3.7 -2.1,-3.6 -5.8,2.9 z m20.2,8.9 1.3,-1.9 4.7,1 0.6,-0.5 6.1,0.6 -0.3,1.3 -2.6,1.5 -4.4,-0.3 z m5.3,5.2 1.9,3.9 3.1,-1.1 0.3,-1.6 -1.6,-2.1 -3.7,-0.3 z m7,-1.2 2.3,-2.9 4.7,2.4 4.4,1.1 4.4,2.7 v1.9 l-3.6,1.8 -4.8,1 -2.4,-1.5 z m16.6,15.6 1.6,-1.3 3.4,1.6 7.6,3.6 3.4,2.1 1.6,2.4 1.9,4.4 4,2.6 -0.3,1.3 -3.9,3.2 -4.2,1.5 -1.5,-0.6 -3.1,1.8 -2.4,3.2 -2.3,2.9 -1.8,-0.2 -3.6,-2.6 -0.3,-4.5 0.6,-2.3 -1.6,-5.7 -2.1,-1.8 -0.2,-2.6 2.3,-1 2.1,-3.1 -0.2,-5.3 z" fill={getStateColor("HI")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("HI")} onMouseEnter={() => setHoveredState("HI")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("HI") && <rect x="230" y="515" width="95" height="40" fill="url(#diagonalHatch)" />}
          </path>
          <path id="IA" d="M556.8,183.6 l2.1,2.1 0.3,0.7 -2,3 0.3,4 2.6,4.1 3.1,1.6 2.4,0.3 0.9,1.2 0.1,2.2 -1.8,1.7 -0.6,1.5 -2.4,1.6 -1.8,0.5 -5.4,2.9 -1.8,0 -1.4,-1.4 -0.5,-2.4 -2.4,-0.7 -0.5,-0.2 -1.2,0.4 -1.1,0.9 -1.4,0.9 -0.8,-0.1 -2.7,-1.8 -1,-2.6 -0.3,-2.4 -2.1,-1.1 -1.9,-0.6 -0.9,-1.4 -0.2,-2.1 -1.5,-1.9 -0.8,-1.9 0.2,-1.7 -0.6,-0.9 0.9,-2.5 1.9,-1.8 0.2,-2.5 -0.5,-1.8 1,-1.7 0.1,-2.4 -0.5,-0.9 -1.4,-0.9 -2.2,-2.1 0.2,-1 -0.2,-1.1 0.6,-1.7 -0.2,-1.3 0.7,-1.1 -0.9,-0.9 -0.1,-0.5 0.7,-0.4 0.3,-0.3 0.8,0 0.4,-2.1 2.8,-0.2 0.9,-0.6 -0.8,-3.2 -2.2,-0.7 -0.2,-0.6 1.3,-0.3 0.6,-0.5 0.9,0.3 1,-0.8 1.4,-0.3 1,-0.5 0.1,-1.2 -1.4,-2.2 0.1,-1.1 -0.6,-0.9 0.1,-1.3 2,-0.1 43,1.2 40.5,0.5 0.9,1.7 0,2.9 0.5,0.8 1.9,0.9 v2.3 l-1.8,0.2 -0.3,1.5 -0.5,0.5 -1.5,0.5 -1,1.6 -1.7,1.1 -2.2,0.8 -0.6,0.4 -0.8,0.9 -0.6,1.1 -1.5,0.5 -2.2,2.1 -0.1,2.1 0.7,1.1 -1.9,1.4 -0.6,1.1 -1.4,0.9 -1.7,0.3 -2.2,-0.5 -1.5,-0.9 -3,-0.4 -1.2,0.1 -1.1,1 -1.3,0.6 -1.4,0.1 -1.7,0.7 -0.7,1.4 -0.5,1.2 -0.3,0.7 -0.9,0.7 -1.6,0.6 -1,0.9 -0.3,1.2 -0.7,0.6 -1.7,0.3 -1,1.3 -0.9,0.6 -0.8,1.3 -0.9,0.9 -1.3,0.4 z" fill={getStateColor("IA")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("IA")} onMouseEnter={() => setHoveredState("IA")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("IA") && <rect x="550" y="180" width="70" height="70" fill="url(#diagonalHatch)" />}
          </path>
          <path id="ID" d="M175.3,27.63 l-4.8,17.41 -4.5,20.86 -3.8,16.46 -1.2,5.07 -1.9,2.44 -1.5,5.46 -4.5,12.8 -1.3,3.8 -1.6,5.4 2.1,2.3 -0.1,3.2 -3.6,6.4 -4.8,12 -0.4,3 -3,5.8 -0.4,3.3 -0.3,5.5 2.5,6.3 -0.7,4.5 -2.1,5.9 0.8,4 -0.4,4.8 -1.6,4 -3.1,2.1 -1.3,4.6 0.2,3.1 -1.6,2.9 0.1,3.4 -2.1,2.4 -1.8,3 -2.5,-0.8 -2.9,-0.8 -3.3,0.4 -2.5,-1.8 -2.7,0.5 -1.8,1.6 -3.5,0.7 -1.8,-1.8 -2.3,0.2 -3,-1.4 -3,0.9 -2.5,-1.4 -2.3,-1.3 0,-0.8 -1,-2.5 -2,-1.3 -1.2,-2.7 -1.8,-1.3 -2.3,-2 -0.3,-2.1 1.1,-2.7 0,-2.3 -0.3,-2.4 -2.4,-2.6 -3.1,-2.8 -2.8,0.9 -3.1,-1.7 -1.8,0.4 -2.3,-1.6 -1.9,1.4 -1.3,0.4 -0.4,-1.4 0.9,-2.9 -2.9,-1.3 -1.3,-2.3 -1.2,-4.1 -2.7,-3.3 -3,-2.1 -2.1,0.3 -2.3,-2.6 -1.2,-4.4 0.8,-3.8 -1.1,-3 -1.6,-2 -0.4,-0.1 -0.4,0.1 -0.8,0.2 -1.8,-0.5 -2.3,-2.5 -3.5,-1.5 -3.2,-3.2 -2.5,1.3 -1.8,-0.2 -2.5,-1.3 -4.9,-1.7 -0.3,-0.4 -2.4,-3.6 -1,-3.5 -0.1,-1.6 -0.7,-0.3 -0.7,0.8 -0.1,0.2 -0.8,0.5 -2.2,-0.8 -1,-2.9 -2.9,-1.3 -3.6,-2.3 v-1.3 l1.7,-1.5 0.2,-1.5 -3.3,-1.8 -2.9,0 -2.9,-3.4 -2.1,-4.1 -0.9,-2.1 -1,-1.7 -1.6,0.3 -2.2,-0.8 -3,-2.3 -1.8,-1.3 -1.5,1 -3.9,-0.2 -2.6,-0.8 -1.9,-1.3 -2.8,-1.3 -1.6,-1.6 -0.8,-3.6 -0.7,-1.1 -3.9,-1.1 -0.4,-0.6 36.356,-7.568 24.084,-5.043 36.8,-8.6 23.5,-5.8 0.2,1.2 -1.5,2.1 2.3,2.8 -1.2,2.8 0,1.8 0.1,0.6 2.6,0.6 3.6,1.8 3.2,0.6 1.3,1.5 0.3,1.8 1,1.7 2.9,0.3 1.2,2.2 0.9,2.1 1.1,1.1 1.3,0.4 2,-0.1 1.2,0.5 0.8,1.1 1.3,0.8 1.4,2.3 1.7,1.7 1.6,0.3 1.8,-1 0.9,1.3 1.1,1 2.5,0.6 1.6,-0.7 1,-1.4 1.3,-0.2 1.7,0.8 2.6,-2.5 1.3,-1.7 0.2,-2.1 -0.3,-2.3 1.2,-0.8 1.7,0.5 2.8,-1.8 -0.4,-1.3 1.4,-1.6 0.4,-1.5 1.3,-3.1 1.7,-1.9 0.9,-1.3 0.1,-2.5 -1.9,-1.4 z" fill={getStateColor("ID")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("ID")} onMouseEnter={() => setHoveredState("ID")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("ID") && <rect x="100" y="25" width="80" height="200" fill="url(#diagonalHatch)" />}
          </path>
          <path id="IL" d="M618.7,214.8 l-1,1.1 -1.6,0.2 -1.8,-1 -2.1,-1.8 -2.5,-0.2 -2.3,-2.2 -2.8,-1.1 -1.5,-0.3 -0.7,-1.5 -0.8,-0.2 -1.1,0.8 -0.8,0.8 v0.8 l0.8,0.5 v1.5 l-1.8,0.8 -0.7,1.6 -1.9,0.1 -1.5,0.8 -0.6,1.3 -0.9,0.3 -1.3,-1.3 -0.4,-1.8 -1.6,-0.6 -0.7,-2.1 -0.1,-2.3 -1.9,-0.8 -2.5,-0.1 -1.3,-1.3 -1.1,-0.1 -1.4,1.1 0.3,1 -0.8,1.3 -2.1,0.5 -1.3,1.3 -0.2,1 0.6,0.7 -0.1,1.1 -1.5,1.5 -2.1,0.7 -1.3,1.9 -0.9,-0.3 -1.3,0.3 -0.5,0.7 -0.9,0.2 -1.9,-0.9 -1.3,1.8 -1.3,0.4 -0.4,0.8 -2.1,0.7 -1.9,1.2 -1,1.4 -0.3,1.4 -0.6,0.9 -1.6,0.3 -1,1.8 -1,0.4 0.2,1.1 -1.5,0.2 -0.7,0.6 0.7,0.9 -0.7,0.7 0.4,1.2 -1.7,0.9 -0.6,1.9 0.8,1.5 -0.8,2.6 0.1,3.8 -1.9,0.8 -0.4,1.3 -1.7,0.5 -0.8,1.5 -1.2,0.2 0.5,0.9 -0.4,1.2 1.2,1.9 -0.1,1 0.5,1.4 0.8,0.8 v2.3 l0.8,1.5 2,1.5 1.2,0.3 0.4,0.8 -0.5,1.8 v2.6 l0.8,2.2 2,3.9 -12.7,1.2 -17.5,0.8 -8.3,0.8 -0.1,-0.4 0.1,-1.9 -0.3,-1 -1.3,-0.2 -1.3,-1.3 -0.4,-1.9 0.8,-5.3 -0.4,-5.2 0.2,-0.5 0.6,-0.2 0.1,-1.5 -0.2,-1.7 -0.9,-1 -0.3,-1.9 -0.8,-1 -0.5,-1.5 -0.7,-0.2 -0.6,-1.3 0.2,-1 0.9,-0.2 0.3,-1.3 -0.2,-1.8 -2.2,-1.9 -0.5,-0.8 0.2,-2.1 -0.8,-1 -0.5,-0.3 0.2,-0.2 1.3,-0.4 1.1,-1.8 0.1,-0.9 -3.6,-3.8 0.8,-2.7 -0.4,-0.8 v-0.6 l0.2,-0.9 1.5,-0.2 1.2,-1.5 -0.2,-1.6 -1.5,-1.9 -0.5,-1.6 -1.6,-0.1 -0.6,-1.3 -0.7,-0.2 -0.2,-0.7 0.2,-0.4 -0.6,-0.9 -2.1,-1.8 -0.8,-1.2 -0.4,-2.8 1.7,-2.8 -0.5,-1.3 0.1,-2.5 -1.3,-2.2 -0.3,-0.9 0.8,-2 1.4,-0.8 0.5,-0.5 v-2.8 l1.1,-1.8 0.5,-1.4 v-1.4 l-0.7,-0.9 -0.8,-2.5 -0.2,-2.8 -0.5,-1 -0.6,-0.4 -0.6,-1.3 0.1,-4.7 0.3,-0.6 1.9,0.9 1.2,-0.1 1,-0.8 1.4,-0.1 1.3,-0.5 1.3,-2.1 1.5,-0.8 2,-0.2 2.9,-1.3 1.8,-2 2.5,-1.9 0.1,-1.8 0.3,-0.8 2.1,-1.8 0.4,-1.2 1.5,-0.3 1.2,-0.8 0.6,-1.9 1.8,-0.6 1.5,-1.7 0.2,-1.3 1.6,0.1 0.9,-0.9 1.5,-0.7 0.7,0.8 0.6,-0.8 1.6,-0.2 1.8,1 1.9,-0.2 1.2,0.4 1.6,-0.3 0.4,-1.1 1.5,-0.5 1.1,-1.3 0.2,-1.2 1,-0.5 0.5,-0.8 1,-0.3 3.1,1.5 1.1,0 1,-0.5 1.4,0.8 0.7,-0.8 0.9,-0.2 3.8,1.3 0.6,-0.7 0.1,-0.8 1.6,-0.2 1.8,0.8 2,-1 0.6,0.1 0.5,0.5 1.7,0.9 1.1,0.2 1.5,-1.4 0.8,0.7 0.6,-0.2 0.2,-0.9 1.3,-0.8 0,1.3 1,0.8 1.7,0.3 0.9,0.7 1.4,0.2 0.5,0.7 2.2,0 1,-0.6 0,-0.8 0.7,-0.2 2.2,1.3 2.3,-0.2 1.2,0.6 3.4,6.5 0.7,1.5 0.5,2.9 -0.1,3.8 -0.9,0.9 -0.1,1.8 1,1.2 0.5,1.4 0.1,3.5 0.6,1.9 1.1,1.5 1.2,1 -0.2,1 -0.6,0.9 0.9,1.1 -0.2,1 -0.6,1.8 -1,0.9 -0.2,0.7 0.7,0.9 0.7,0.2 0.6,0.8 0.3,0.9 0.8,0.4 0.7,0.8 -0.8,1.3 z" fill={getStateColor("IL")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("IL")} onMouseEnter={() => setHoveredState("IL")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("IL") && <rect x="570" y="170" width="50" height="120" fill="url(#diagonalHatch)" />}
          </path>
          <path id="IN" d="M622.9,216.1 l1.5,1 -0.2,2.7 -0.5,4.8 -2.4,10 -0.3,2.7 1.2,1.8 0.1,1.4 -2.3,1.7 -3.5,1.6 -2.8,4 0.2,2.4 -0.5,1.5 v3.7 l4.4,3.6 1.9,2.5 0.1,2.2 -0.9,0.1 -0.2,2 -1.5,4.1 -1.3,1.9 -4.1,2 -2.3,0.2 -3.9,5.2 -0.7,2.3 -3.8,2.2 -1.1,-0.8 -1.4,0 -5.1,-2.4 -1.7,-1.2 -1.3,-0.2 -5.7,-1.3 -3.1,0.2 -1.5,0.3 -2.6,-1.3 -0.9,-1.4 -3.7,-1.9 -0.7,-2.1 -1.5,-1.4 -0.1,-3.5 0.9,-1.7 -0.8,-3.5 0.5,-0.4 -0.4,-1.7 -1.9,-1.1 -0.7,-2.1 -2.2,-1.1 -2.5,-4 -1.2,-1.1 -4.3,-2.3 -5.7,-0.4 -1.1,-1.3 -0.6,-2.9 -1.8,-0.6 -0.8,-1.1 -0.1,-1.8 -1.6,-1.9 -0.9,-0.8 -0.5,0.5 -0.4,1.8 -2.2,0.4 -1.9,-0.8 -2.9,-0.3 -1.2,-0.8 -0.5,-2.9 -1.9,-1.5 -0.3,-1.1 0,-0.7 -0.7,-1.7 1.4,-3.4 2.1,-2 0.4,-0.8 4,-0.3 -0.6,-2 1.2,-0.4 0.4,-0.9 -0.2,-2 0.9,-1.5 0.1,-2.3 -1.7,-1.7 -0.6,-2.2 -0.8,-1.2 -0.2,-1.3 0.6,-0.9 0.2,-1.1 -0.8,-1.3 -0.7,-0.7 -0.8,-0.4 -0.3,-0.9 -0.6,-0.8 -0.7,-0.2 -0.7,-0.9 0.2,-0.7 1,-0.9 0.6,-1.8 0.2,-1 -0.9,-1.1 0.6,-0.9 0.2,-1 -1.2,-1 -1.1,-1.5 -0.6,-1.9 -0.1,-3.5 -0.5,-1.4 -1,-1.2 0.1,-1.8 0.9,-0.9 0.1,-3.8 -0.5,-2.9 -0.7,-1.5 -3.4,-6.5 0.9,-0.5 1.7,-0.3 1.6,0.6 1.7,-0.6 4.9,-2.1 4.1,-0.4 2.4,0.8 3.7,-0.4 1,-0.4 3.2,0.8 2.5,0.1 1.9,1.3 0.1,4.9 0.6,1.4 1.7,-0.5 2,-1.8 1.5,-0.7 0.1,3.3 0.6,2.3 1.4,0.8 1.5,0.2 1.6,-1.4 1.6,-0.2 3.4,1.2 1.8,-0.3 1.8,-2.2 1.3,-0.3 1.3,0.7 0.7,1.1 3.4,-0.6 1.2,0.2 1.2,0.9 1,-0.5 5.1,0 1.9,-0.8 0.4,0.3 -0.3,1 -1.3,1.4 -0.6,1.6 0.1,1.3 1.5,1.4 1.5,0.7 0.9,1.2 1.4,0.5 0.4,0.9 -0.1,1.2 0.5,1.5 -1.1,3.3 -1.3,1.3 -2.2,0.9 -1.8,0.9 -0.4,3.5 0.8,0.5 1,-0.3 0.9,-0.9 0.5,-0.1 0.3,0.9 -0.7,1.5 0.2,1.5 -0.9,0.9 0,0.7 0.9,1.3 1.4,0.8 0.3,0.7 -0.1,2.2 1.3,1.1 z" fill={getStateColor("IN")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("IN")} onMouseEnter={() => setHoveredState("IN")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("IN") && <rect x="580" y="200" width="45" height="100" fill="url(#diagonalHatch)" />}
          </path>
          <path id="KS" d="M485.9,259.5 l0.9,0.7 0.9,0.1 1,-0.2 1.2,-1.8 1.1,-0.4 2,-0.8 1.6,-0.2 0.9,0.3 1.8,-0.6 0.9,-0.8 1.7,0.4 0.8,-0.1 0.7,-0.9 -1.1,-1.9 -0.1,-1.3 1.6,-0.5 0.3,-0.8 -0.9,-1.6 0.3,-0.2 9.4,4.2 47.8,18.5 1.3,0.9 -1,1.3 -0.5,1.6 0.5,1.6 4.2,3.9 1,1.5 0.8,2.7 0.1,1.2 -0.9,2 v0.9 l0.5,0.5 1.2,0.2 h1.9 l0.8,0.8 1,0.2 2.1,-1.2 0.2,-0.9 0.3,-0.2 0.6,0.6 0.8,0.1 1.2,-0.5 1,-0.1 0.5,0.4 0.6,1 2.3,-0.2 -0.1,1.4 1.1,1.6 0.8,0.4 2,0.6 0.9,1.2 0.1,0.9 -1.8,1 -0.7,0.7 0,1.1 -0.7,1.2 -0.2,1.3 1.1,2.2 0.8,0.5 -0.4,-0.8 l0.5,-0.9 -0.9,-1.3 0.2,-0.4 -0.1,-0.7 0.5,-0.5 0.3,0.7 1.2,0.3 1.8,-1.2 0.7,1.1 0.2,1.6 -1.9,1.7 0.1,0.7 1.5,0.3 0.5,0.8 -0.4,1.7 -3.5,3 -1.8,0.7 -2.5,0.2 -3,-0.4 -1.1,0.3 -1.8,1.2 -1.3,1.2 -1.3,0.3 -1.9,-0.7 -1.4,-0.9 -3.8,-0.5 -1.8,1 -0.6,0 -0.2,0.7 -1.2,0.5 -2.3,1.6 -0.5,1.1 -0.1,0.9 0.5,1 -0.4,0.9 0.3,0.8 0.7,0.8 0.5,1.2 -0.4,1.6 -0.3,0.6 -0.9,0.7 -1.3,0.3 -0.3,1.4 -0.7,0.6 -2,0.8 -0.3,0.5 0.3,0.5 -0.1,0.8 -1,0.5 -0.6,0.6 -0.8,1.5 -1.7,0.3 -0.8,1 -2,1.5 -1.1,1.1 -0.6,0.2 -0.9,-0.2 -1.1,-1.3 -1.2,-0.7 -1.6,-0.3 -1.8,0.6 -0.5,-0.1 -0.1,-0.9 -1.2,-1.1 -1.9,-1 -0.9,0.3 -1,0.8 -1,1.4 0.1,0.5 -0.5,1.1 -0.1,0.7 0.3,0.3 0.5,0.3 1.2,2.5 0.2,1.6 -1.7,1.7 -0.1,1.8 0.6,-0.8 1.3,-0.7 1.2,0.4 1.8,1.2 1.3,1.4 1.5,0.4 1.6,-0.4 0.8,-0.6 1,-1.5 1.6,-0.3 0,-0.4 1.5,-0.7 0.4,0.5 2.3,0.7 2.1,-0.6 0.6,0.6 0.2,1" fill={getStateColor("KS")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("KS")} onMouseEnter={() => setHoveredState("KS")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("KS") && <rect x="480" y="250" width="100" height="70" fill="url(#diagonalHatch)" />}
          </path>
          <path id="KY" d="M607.2,331.8 l0.6,-2.3 3.8,-2.2 0.7,-2.3 3.9,-5.2 2.3,-0.2 4.1,-2 1.3,-1.9 1.5,-4.1 0.2,-2 0.9,-0.1 -0.1,-2.2 -1.9,-2.5 -4.4,-3.6 v-3.7 l0.5,-1.5 -0.2,-2.4 2.8,-4 3.5,-1.6 2.3,-1.7 -0.1,-1.4 -1.2,-1.8 0.3,-2.7 2.4,-10 0.5,-4.8 0.2,-2.7 -1.5,-1 -1.3,-1.1 0.1,-2.2 -0.7,-2.3 -1.1,-0.5 -2.1,1.2 -2.9,0.8 -4.2,2.3 -1.8,0.5 -2.2,2.1 -1.4,0.9 -2.2,0.8 -1.2,1.1 -1.3,0.1 -2.4,-1.2 -2.2,1.6 -1.8,0.5 -1.7,0.9 -0.5,-2.3 0.5,-1.9 1.2,-1.4 0.6,-2.3 -1.6,-1.4 -1.4,-2.2 -2,-1.4 -1.9,-2.5 -0.5,-1.8 -1.2,-1.1 -0.9,0.6 -1.2,2.8 -0.7,0.5 -0.8,-0.9 -0.9,-0.1 -2,1.2 -1,-2 -2.6,-2.5 -2,-0.1 -1.7,-1.3 -2.2,0.1 -0.8,-0.9 -1.4,-0.3 -2.1,0.7 -1.5,0 -1.8,1.2 -2.2,-0.9 -1.5,0.3 -2.2,1.1 0.2,2.4 -0.4,3.2 -1.6,1.9 -0.5,0.1 -1.5,-1.2 -1,-0.1 -1.6,1.9 -2.2,1.1 -0.3,0.5 0.1,1.9 -2.5,0.8 -2,0 -1.7,3.3 -1.3,0.8 -2,0.1 -2.5,0.9 -0.5,1.2 -0.7,0.5 -13.8,0.6 -8.5,0.1 -8.1,0.9 -4.2,0.8 -3.3,0.5 -0.3,4.7 -0.5,1.4 1.1,1.5 0.4,3.5 1.6,2.5 0.3,1.9 1.4,0.9 0.5,1.8 -0.9,1.4 0.4,4.8 -0.8,2.2 -2.2,1.9 -0.4,5.3 0.1,1.5 1.5,2.2 0.5,1.7 0.1,3.4 2.1,3.5 2.1,2.4 -0.7,2.7 14.3,-1.2 14.9,-1.2 4.9,-0.2 11.3,-0.9 8.6,-0.5 18.6,-1.9 5.4,-0.2 0.1,0 13.8,-1.6 0.1,0 5.4,-0.9 5.7,-0.4 4.9,-0.8 z" fill={getStateColor("KY")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("KY")} onMouseEnter={() => setHoveredState("KY")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("KY") && <rect x="560" y="290" width="100" height="50" fill="url(#diagonalHatch)" />}
          </path>
          <path id="LA" d="M526.9,485.9 l8.1,-0.3 10.3,3.6 6.5,1.1 3.7,-1.5 3.2,1.1 3.2,1 0.8,-2.1 -3.2,-1.1 -2.6,0.5 -3.4,-1.3 0.5,-1.7 3.4,-0.9 1.6,-1.5 0.8,-4.2 -1,-1.1 -0.2,-2.3 2.1,-4.7 2.6,-2.9 0.8,-4.4 1.8,-4.2 0.3,-6.7 -1,-1.1 0.3,-2.4 -2.3,-3.4 -0.5,-2.4 0.4,-2.1 1.9,-4.2 -0.3,-2.6 1.1,-1.5 -1,-1.8 -1.6,-0.2 -0.8,-1.3 0.6,-0.8 -0.8,-1.3 -0.3,-2.7 -1.6,-0.7 0.8,-1.5 -1.6,-1.9 -0.2,-1 1.3,-0.7 -0.6,-0.8 -0.8,-2.9 -0.8,-0.3 0.7,-0.7 -0.9,-1 -0.2,-1.8 0.9,-1.9 0,-0.6 -18.1,1 -17.9,1 0.4,2.3 2.8,19.4 2.8,18.7 0.5,3.4 2.4,1.9 0.9,1.1 -0.1,1.9 -1.9,1.7 -0.7,2.1 0.8,2.5 -0.8,1.5 -1.1,0.2 -0.5,0.9 1.3,0.8 -0.3,0.8 -0.9,1.4 0.7,0.7 -0.1,1 -0.7,0.6 0,1 0.7,0.6 0.9,2.1 -0.1,1.4 1.5,2.3 0.2,1 -0.7,0.6 z" fill={getStateColor("LA")} stroke="#FFFFFF" strokeWidth="1" onClick={() => setHoveredState("LA")} onMouseEnter={() => setHoveredState("LA")} onMouseLeave={() => setHoveredState(null)} style={{cursor: 'pointer'}}>
            {hasStripes("LA") && <rect x="520" y="430" width="60" height="60" fill="url(#diagonalHatch)" />}
          </path>
 
        </svg>
        
        {/* Tooltip */}
        {hoveredState && statesData[hoveredState] && (
          <div 
            className="absolute bg-white p-4 rounded-md shadow-lg z-10 max-w-xs border border-gray-300"
            style={{
              left: tooltipPosition.x,
              top: tooltipPosition.y,
              transform: 'translate(10px, 10px)'
            }}
          >
            <h3 className="text-lg font-bold mb-2">{statesData[hoveredState]['State Name']}</h3>
            <div className="grid grid-cols-2 gap-2 text-sm">
              <div className="font-semibold">Status:</div>
              <div>
                {statesData[hoveredState].Current === 1 && (
                  <span className="text-red-700">Active in 2025</span>
                )}
                {statesData[hoveredState].Passed === 1 && statesData[hoveredState].Current === 1 && (
                  <span className="text-red-900">Law Passed & Currently Active</span>
                )}
                {statesData[hoveredState].Passed === 1 && statesData[hoveredState].Current !== 1 && (
                  <span className="text-gray-900">Law Passed</span>
                )}
                {statesData[hoveredState].Passed !== 1 && statesData[hoveredState].Current !== 1 && (
                  <span className="text-red-300">Active Before 2025</span>
                )}
              </div>
              
              {statesData[hoveredState]['2025 Bill Number'] && (
                <>
                  <div className="font-semibold">Bill Number:</div>
                  <div>{statesData[hoveredState]['2025 Bill Number']}</div>
                </>
              )}
              
              {statesData[hoveredState]['Signed Date'] && (
                <>
                  <div className="font-semibold">Signed Date:</div>
                  <div>{statesData[hoveredState]['Signed Date']}</div>
                </>
              )}
              
              {statesData[hoveredState]['Effective Date'] && (
                <>
                  <div className="font-semibold">Effective Date:</div>
                  <div>{statesData[hoveredState]['Effective Date']}</div>
                </>
              )}
              
              {statesData[hoveredState]['Covered Products'] && (
                <>
                  <div className="font-semibold col-span-2 mt-2">Covered Products:</div>
                  <div className="col-span-2">{statesData[hoveredState]['Covered Products']}</div>
                </>
              )}
              
              {statesData[hoveredState]['Scope'] && (
                <>
                  <div className="font-semibold col-span-2 mt-2">Scope:</div>
                  <div className="col-span-2">{statesData[hoveredState]['Scope']}</div>
                </>
              )}
              
              {statesData[hoveredState]['URL'] && (
                <div className="col-span-2 mt-2">
                  <a 
                    href={statesData[hoveredState]['URL']} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="text-blue-600 hover:underline"
                  >
                    More Information
                  </a>
                </div>
              )}
            </div>
          </div>
        )}
        
        {/* Loading indicator */}
        {!dataLoaded && (
          <div className="absolute inset-0 flex items-center justify-center bg-white bg-opacity-75">
            <div className="text-center">
              <div className="w-12 h-12 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
              <p className="text-lg font-medium">Loading map data...</p>
            </div>
          </div>
        )}
      </div>
      
      {/* Add a note about the data source */}
      <div className="mt-6 text-center text-sm text-gray-500">
        <p>Data source: Right to Repair legislation tracking across the United States.</p>
        <p>Click or hover over a state to view detailed information about its Right to Repair legislation status.</p>
      </div>
    </div>
  );
};

export default USAMap;